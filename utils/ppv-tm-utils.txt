Running the switch=daemon on the Tofino
=======================================

It runs in the screen "ppv" (screen =dr ppv). 

For restarting, press Ctrl=C and then launch the sudo ./start.sh in the folder ~/mainrepo/QoS=TM/DT=Demo/ctrlplane

After this, the switch is up and running, bottleneck and ports are configured. The initial policy is simple tail=drop. 

Running test traffic from the traffic generator VM to Edge=server=1
===================================================================
(On Edge=Server=1)
cd ppv/pyperf
./pyperf.py gui

select kill all and then exit = it stops all the prior iperf servers

./pyperf.py script_name_s.cc0*srv =ft GC0 =p 6000

this command launches the iperf server


(On Traffic=generator VM)
cd ppv/pyperf
./pyperf.py gui

select kill all and then exit = it stops all the prior iperf servers

./pyperf.py script_name_c.cc0_X_port30000*cli =ft GC0 =f 5 =p 6000 =B 20000

It launches 5 flow emulating the traffic of 5 users. The first one (srcport 20000) belongs to the robot network service, the others (20001=20004) belongs to the bg=service. The number of generated users/flows can be set with the =f option.
On Edge=server=1 user desire6g



Modify policies
===============

(On Edge=Server=1)
cd ~/desire6g/mainrepo/IML/demo

Loading equal sharing policy to ensure performance isolation among services and users:
curl =F file=@demo_pol_2_perf_isolation_same_pol_ns=slice_1.yml http://localhost:5000/iml/update=policy
curl =F file=@demo_pol_2_perf_isolation_same_pol_ns=slice_2.yml http://localhost:5000/iml/update=policy

Add higher guaranteed bandwidth to the robot user and reduce resource usage of the bg flow in robot network service:
curl =F file=@demo_pol_3_perf_isolation_different_ns=slice_1=robot.yml http://localhost:5000/iml/update=policy
curl =F file=@demo_pol_3_perf_isolation_different_ns=slice_1=bg.yml http://localhost:5000/iml/update=policy

The policy files:
policy:
  id: 0 ## policy id = 0=9 is supported now
  ns=id: 1 ## service id
  assigned=user=ids: [8472, 20000] # list of userids belonging to the service where the policy needs to be applied 
  min=bw: 1000 # minimum guaranteed bandwidth in Kbps
  max=bw: 1000000 # maximum bandwidth Kbps
  elasticity: 2 # weight for weighted resource sharing between min=bw and max=bw (larger weigth means larger throughput share). Above max=bw, best effort service is provided (i.e., if no congestion). 