##################
### ros-master ###
##################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: roscore-edge-deployment
  labels:
    app: digital-twin-service
    node: roscore-edge
spec:
  replicas: 1
  selector:
    matchLabels:
      node: roscore-edge
  template:
    metadata:
      labels:
        node: roscore-edge
    spec:
      containers:
      - name: roscore-edge
        tty: true
        image: go1-roscore
        imagePullPolicy: IfNotPresent
        env:
        - name: ROS_MASTER_URI
          value: "http://10.11.7.4:11311"
        - name: ROS_IP
          value: "10.11.7.4"
        - name: ENABLE_STATISTICS
          value: "false"
      hostNetwork: true
      nodeSelector:
        nodetype: edge
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule

---

################
### go1-base ###
################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: go1-base-deployment
  labels:
    app: digital-twin-service
    node: go1-base
spec:
  replicas: 1
  selector:
    matchLabels:
      node: go1-base
  template:
    metadata:
      labels:
        node: go1-base
    spec:
      containers:
      - name: go1-base
        image: go1-base
        imagePullPolicy: IfNotPresent
        env:
        - name: ROS_MASTER_URI
          value: "http://10.11.7.4:11311"
        - name: ROS_IP
          value: "10.11.15.132"
        - name: TARGET_IP
          value: "192.168.123.161"
        securityContext:
            privileged: true
      hostNetwork: true
      nodeSelector:
        nodetype: robot

---

###########################
### gesture-control-app ###
###########################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: gesture-control-app-deployment
  labels:
    app: digital-twin-service
    node: gesture-control-app
spec:
  replicas: 1
  selector:
    matchLabels:
      node: gesture-control-app
  template:
    metadata:
      labels:
        node: gesture-control-app
    spec:
      containers:
      - name: gesture-control-app
        image: go1-gesture-control
        imagePullPolicy: IfNotPresent
        env:
        - name: ROS_MASTER_URI
          value: "http://10.11.7.4:11311"
        - name: ROS_IP
          value: "10.11.7.4"
        - name: CAMERA_TYPE
          value: "webcam_ip"
        - name: WEB_SERVER
          value: "yes"
        - name: CONTROL_LOOP_RATE
          value: "100"
        - name: CMD_VEL
          value: "go1_controller/cmd_vel"
        - name: STAMPED
          value: "true"
        volumeMounts:
          - name: webcam
            mountPath: /dev/video0
        securityContext:
          privileged: true
      volumes:
        - name: webcam
          hostPath:
            path: /dev/video0
      hostNetwork: true
      nodeSelector:
        nodetype: edge

---

#####################
### lidar-drivers ###
#####################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: lidar-deployment
  labels:
    app: digital-twin-service
    node: lidar
spec:
  replicas: 1
  selector:
    matchLabels:
      node: lidar
  template:
    metadata:
      labels:
        node: lidar
    spec:
      containers:
      - name: lidar
        image: rplidar-lidar
        imagePullPolicy: IfNotPresent
        env:
        - name: ROS_MASTER_URI
          value: "http://10.11.7.4:11311"
        - name: ROS_IP
          value: "10.11.15.132"
        volumeMounts:
          - name: rplidar
            mountPath: /dev/rplidar
        securityContext:
          privileged: true
      volumes:
        - name: rplidar
          hostPath:
            path: /dev/rplidar
      hostNetwork: true
      nodeSelector:
        nodetype: robot

---

######################
### go1-navigation ###
######################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: go1-navigation-deployment
  labels:
    app: digital-twin-service
    node: go1-navigation
spec:
  replicas: 1
  selector:
    matchLabels:
      node: go1-navigation
  template:
    metadata:
      labels:
        node: go1-navigation
    spec:
      containers:
      - name: go1-navigation
        image: go1-navigation
        imagePullPolicy: IfNotPresent
        env:
        - name: ROS_MASTER_URI
          value: "http://10.11.7.4:11311"
        - name: ROS_IP
          value: "10.11.7.4"
      hostNetwork: true      
      nodeSelector:
        nodetype: edge
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule

---

################
### rviz-vnc ###
################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rviz-vnc-deployment
  labels:
    app: digital-twin-service
    node: rviz-vnc
spec:
  replicas: 1
  selector:
    matchLabels:
      node: rviz-vnc
  template:
    metadata:
      labels:
        node: rviz-vnc
    spec:
      containers:
      - name: rviz-vnc
        image: go1-rviz-vnc
        imagePullPolicy: IfNotPresent
        env:
        - name: ROS_MASTER_URI
          value: "http://10.11.7.4:11311"
        - name: ROS_IP
          value: "10.11.7.4"
        ports:
        - containerPort: 80
        securityContext:
            privileged: true
        resources:
            limits:
              memory: "1Gi"
      nodeSelector:
        nodetype: edge

---

### Headless service declaration.
### This is required to map to app "rviz-vnc" so that other pods can DNS its IP address dynamically.
apiVersion: v1
kind: Service
metadata:
  name: rviz-vnc
  labels:
    app: digital-twin-service
    node: rviz-vnc
spec:
  clusterIP: None
  selector:
    node: rviz-vnc

---

### LoadBalancer service declaration.
### This is required to expose the ports that enable web access to the rviz-vnc container
apiVersion: v1
kind: Service
metadata:
  name: rviz-vnc-frontend
  labels:
    app: digital-twin-service
    node: rviz-vnc
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 6080
      targetPort: 80
  selector:
    node: rviz-vnc

---

#######################
### digital-replica ###
#######################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: digital-twin-app-deployment
  labels:
    app: digital-twin-service
    node: digital-twin-app
spec:
  replicas: 1
  selector:
    matchLabels:
      node: digital-twin-app
  template:
    metadata:
      labels:
        node: digital-twin-app
    spec:
      containers:
      - name: digital-twin-app
        image: isaac-sim:2023.1.0-ubuntu22.04
        imagePullPolicy: IfNotPresent
        env:
        - name: ROS_MASTER_URI
          value: "http://10.11.7.4:11311"
        - name: ROS_IP
          value: "10.11.7.4"
        - name: ACCEPT_EULA
          value: "Y"
        - name: PRIVACY_CONSENT
          value: "Y"
        volumeMounts:
        - name: cache-kit
          mountPath: /isaac-sim/kit/cache
        - name: cache-ov
          mountPath: /root/.cache/ov
        - name: cache-pip
          mountPath: /root/.cache/pip
        - name: cache-glcache
          mountPath: /root/.cache/nvidia/GLCache
        - name: cache-computecache
          mountPath: /root/.nv/ComputeCache
        - name: logs
          mountPath: /root/.nvidia-omniverse/logs
        - name: data
          mountPath: /root/.local/share/ov/data
        - name: documents
          mountPath: /root/Documents
        - name: my-environments
          mountPath: /isaac-sim/my-environments
        command: ["bash", "-c", "./runheadless.native.sh -v"]
        securityContext:
            privileged: true
      runtimeClassName: nvidia
      volumes:
      - name: cache-kit
        hostPath:
          path: /home/desire6g/docker/isaac-sim/cache/kit
      - name: cache-ov
        hostPath:
          path: /home/desire6g/docker/isaac-sim/cache/ov
      - name: cache-pip
        hostPath:
          path: /home/desire6g/docker/isaac-sim/cache/pip
      - name: cache-glcache
        hostPath:
          path: /home/desire6g/docker/isaac-sim/cache/glcache
      - name: cache-computecache
        hostPath:
          path: /home/desire6g/isaac-sim/cache/computecache
      - name: logs
        hostPath:
          path: /home/desire6g/docker/isaac-sim/logs
      - name: data
        hostPath:
          path: /home/desire6g/docker/isaac-sim/data
      - name: documents
        hostPath:
          path: /home/desire6g/docker/isaac-sim/documents
      - name: my-environments
        hostPath:
          path: /home/desire6g/unitree-go1-digital-twin/digital-twin-service/digital-replica/my-environments
      hostNetwork: true
      nodeSelector:
        nodetype: edge